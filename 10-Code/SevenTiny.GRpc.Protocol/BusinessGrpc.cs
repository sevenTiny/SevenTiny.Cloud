// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Business.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SevenTiny.GRpc.Protocol {
  public static partial class BusinessService
  {
    static readonly string __ServiceName = "SevenTiny.GRpc.Protocol.BusinessService";

    static readonly grpc::Marshaller<global::SevenTiny.GRpc.Protocol.Model.RequestArgs> __Marshaller_SevenTiny_GRpc_Protocol_Model_RequestArgs = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SevenTiny.GRpc.Protocol.Model.RequestArgs.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SevenTiny.GRpc.Protocol.Model.OperateResult> __Marshaller_SevenTiny_GRpc_Protocol_Model_OperateResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SevenTiny.GRpc.Protocol.Model.OperateResult.Parser.ParseFrom);

    static readonly grpc::Method<global::SevenTiny.GRpc.Protocol.Model.RequestArgs, global::SevenTiny.GRpc.Protocol.Model.OperateResult> __Method_Test = new grpc::Method<global::SevenTiny.GRpc.Protocol.Model.RequestArgs, global::SevenTiny.GRpc.Protocol.Model.OperateResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Test",
        __Marshaller_SevenTiny_GRpc_Protocol_Model_RequestArgs,
        __Marshaller_SevenTiny_GRpc_Protocol_Model_OperateResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SevenTiny.GRpc.Protocol.BusinessReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BusinessService</summary>
    public abstract partial class BusinessServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::SevenTiny.GRpc.Protocol.Model.OperateResult> Test(global::SevenTiny.GRpc.Protocol.Model.RequestArgs request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BusinessService</summary>
    public partial class BusinessServiceClient : grpc::ClientBase<BusinessServiceClient>
    {
      /// <summary>Creates a new client for BusinessService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BusinessServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BusinessService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BusinessServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BusinessServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BusinessServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::SevenTiny.GRpc.Protocol.Model.OperateResult Test(global::SevenTiny.GRpc.Protocol.Model.RequestArgs request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Test(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SevenTiny.GRpc.Protocol.Model.OperateResult Test(global::SevenTiny.GRpc.Protocol.Model.RequestArgs request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Test, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SevenTiny.GRpc.Protocol.Model.OperateResult> TestAsync(global::SevenTiny.GRpc.Protocol.Model.RequestArgs request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SevenTiny.GRpc.Protocol.Model.OperateResult> TestAsync(global::SevenTiny.GRpc.Protocol.Model.RequestArgs request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Test, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BusinessServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BusinessServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(BusinessServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Test, serviceImpl.Test).Build();
    }

  }
}
#endregion
